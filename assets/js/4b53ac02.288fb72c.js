"use strict";(self.webpackChunk_orca_so_whirlpools_docs=self.webpackChunk_orca_so_whirlpools_docs||[]).push([[5831],{1005:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Legacy SDK/Managing Whirlpools/Create a Pool","title":"Creating a Pool","description":"Whirlpools is set up such that anyone is able to set up a liquidity pool within a WhirlpoolsConfig space. Follow these steps to initialize a Whirlpool using the initialize_pool instruction.","source":"@site/docs/04-Legacy SDK/02-Managing Whirlpools/01-Create a Pool.md","sourceDirName":"04-Legacy SDK/02-Managing Whirlpools","slug":"/Legacy SDK/Managing Whirlpools/Create a Pool","permalink":"/Legacy SDK/Managing Whirlpools/Create a Pool","draft":false,"unlisted":false,"editUrl":"https://github.com/orca-so/whirlpools/tree/main/docs/whirlpool/docs/04-Legacy SDK/02-Managing Whirlpools/01-Create a Pool.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"sidebar","previous":{"title":"Important Util helpers","permalink":"/Legacy SDK/Basic Usage/Important Util Helpers"},"next":{"title":"Opening a Position","permalink":"/Legacy SDK/Position Management/Opening a Position"}}');var o=t(1085),r=t(1184);const a={},l="Creating a Pool",s={},c=[{value:"Determine Whirlpool Parameters",id:"determine-whirlpool-parameters",level:2},{value:"Determining initial sqrt-price",id:"determining-initial-sqrt-price",level:2},{value:"Determine the appropriate FeeTier",id:"determine-the-appropriate-feetier",level:2},{value:"Sample Code",id:"sample-code",level:2}];function h(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"creating-a-pool",children:"Creating a Pool"})}),"\n",(0,o.jsxs)(i.p,{children:["Whirlpools is set up such that anyone is able to set up a liquidity pool within a WhirlpoolsConfig space. Follow these steps to initialize a Whirlpool using the ",(0,o.jsx)(i.code,{children:"initialize_pool"})," instruction."]}),"\n",(0,o.jsx)(i.h2,{id:"determine-whirlpool-parameters",children:"Determine Whirlpool Parameters"}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.strong,{children:"Whirlpool Pda"})," - The derived address of the Whirlpool account that will be initialized. Can be derived with ",(0,o.jsx)(i.a,{href:"https://dev.orca.so/legacy/classes/PDAUtil.html#getWhirlpool",children:(0,o.jsx)(i.code,{children:"PDAUtil.getWhirlpool()"})})]}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.strong,{children:"Token Mints"})," - The mints of the tokens for this trading pair. Token A and Token B Mint has to be cardinally ordered. Use the ",(0,o.jsx)(i.a,{href:"https://dev.orca.so/legacy/classes/PoolUtil.html#orderMints",children:(0,o.jsx)(i.code,{children:"orderMints"})})," function to help you order them."]}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.strong,{children:"Tick Spacing"})," - Consider the effects of fees and tick-spacing when determining your tick spacing value. Note that for optimal compute-budget performance, tick-spacing should be a power of 2."]}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.strong,{children:"Token Vault Keypairs"})," - Empty Keypair accounts that will host deposited tokens for this pool. Once the initialize ix is ran, these accounts will be initialized as a spl-token accounts with the tokenAuthority set to the Whirlpool program."]}),"\n",(0,o.jsx)(i.h2,{id:"determining-initial-sqrt-price",children:"Determining initial sqrt-price"}),"\n",(0,o.jsx)(i.p,{children:"This determines where the tick will be after initialization. It is recommended that this be set close to the market price, otherwise it will take a series of swap iterations to move the price back to the desired location."}),"\n",(0,o.jsxs)(i.p,{children:["The price must be within ",(0,o.jsx)(i.code,{children:"MIN_SQRT_PRICE"})," and ",(0,o.jsx)(i.code,{children:"MAX_SQRT_PRICE"}),", and must be shifted by 64 bits."]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-tsx",children:"// Current SOL/USDC price\nconst desiredMarketPrice = new Decimal(98);\n// Invert due to token mint ordering\nconst actualPrice = new Decimal(1).div(desiredMarketPrice);\n// Shift by 64 bits\nconst initSqrtPrice = MathUtil.toX64(actualPrice);\n"})}),"\n",(0,o.jsxs)(i.blockquote,{children:["\n",(0,o.jsx)(i.p,{children:"\u2139\ufe0f Reminder to take into account the ordering of the token A / B when determining the price. You may have to invert the value if your traded token is older than base token."}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"determine-the-appropriate-feetier",children:"Determine the appropriate FeeTier"}),"\n",(0,o.jsx)(i.p,{children:"The fee tier account determines the initial default fee amount for this pool. There's no hard requirement to use the fee-tier with the same tick-spacing as the pool you are initializing, but it is recommended. If the desired fee rate account for a particular tick-spacing does not exist yet, contact the WhirlpoolConfig's feeAuthority to either:"}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsxs)(i.li,{children:["Create the appropriate fee tier for you with the ",(0,o.jsx)(i.code,{children:"initialize_fee_tier"})," ix."]}),"\n",(0,o.jsxs)(i.li,{children:["Set your desired fee tier for you with the ",(0,o.jsx)(i.code,{children:"set_fee_rate"})," ix."]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"sample-code",children:"Sample Code"}),"\n",(0,o.jsx)(i.p,{children:"Create the instruction and invoke it when you are ready."}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-tsx",children:"const whirlpoolPda = getWhirlpoolPda(\n  programId,\n  whirlpoolConfigKey,\n  toPubKey(tokenMintA),\n  toPubKey(tokenMintB),\n  tickSpacing\n);\n\nconst feeTierKey = getFeeTierPda(programId, whirlpoolConfigKey, tickSpacing).publicKey;\nconst tokenVaultAKeypair = Keypair.generate();\nconst tokenVaultBKeypair = Keypair.generate();\n\nawait WhirlpoolIx.initializePoolIx(ctx, {\n  initSqrtPrice,\n  tickSpacing: 128,\n  tokenMintA,\n  tokenMintB,\n  tokenVaultAKeypair,\n  tokenVaultBKeypair,\n  whirlpoolPda,\n  whirlpoolsConfig,\n  feeTierKey: feeTierPda.publicKey,\n  funder: ctx.wallet.publicKey,\n}).toTx().buildAndExecute();\n"})})]})}function d(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},1184:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>l});var n=t(4041);const o={},r=n.createContext(o);function a(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);