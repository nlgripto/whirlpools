"use strict";(self.webpackChunk_orca_so_whirlpools_docs=self.webpackChunk_orca_so_whirlpools_docs||[]).push([[5506],{95:(e,t,n)=>{n.d(t,{A:()=>w});var i=n(4041),o=n(4357),r=n(5245),s=n(6090),a=n(3190),l=n(838),u=n(6423),d=n(6326);function c(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??function(e){return c(e).map((e=>{let{props:{value:t,label:n,attributes:i,default:o}}=e;return{value:t,label:n,attributes:i,default:o}}))}(n);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const o=(0,s.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(o.location.search);t.set(r,e),o.replace({...o.location,search:t.toString()})}),[r,o])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,r=h(e),[s,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=n.find((e=>e.default))??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:r}))),[u,c]=m({queryString:n,groupId:o}),[f,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,r]=(0,d.Dv)(n);return[o,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:o}),y=(()=>{const e=u??f;return p({value:e,tabValues:r})?e:null})();(0,a.A)((()=>{y&&l(y)}),[y]);return{selectedValue:s,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),g(e)}),[c,g,r]),tabValues:r}}var g=n(1310);const y={tabList:"tabList_M0Dn",tabItem:"tabItem_ysIP"};var x=n(1085);function j(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,r.a_)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),o=a[n].value;o!==i&&(u(t),s(o))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t),children:a.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>{l.push(e)},onKeyDown:c,onClick:d,...r,className:(0,o.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":i===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function b(e){const t=f(e);return(0,x.jsxs)("div",{className:(0,o.A)("tabs-container",y.tabList),children:[(0,x.jsx)(j,{...t,...e}),(0,x.jsx)(v,{...t,...e})]})}function w(e){const t=(0,g.A)();return(0,x.jsx)(b,{...e,children:c(e.children)},String(t))}},1184:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(4041);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}},4435:(e,t,n)=>{n.d(t,{A:()=>s});n(4041);var i=n(4357);const o={tabItem:"tabItem_OMyP"};var r=n(1085);function s(e){let{children:t,hidden:n,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(o.tabItem,s),hidden:n,children:t})}},7294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Whirlpools SDKs/Whirlpools/Position Management/Adjust Liquidity","title":"Adjusting Liquidity in Your Positions","description":"Once you\u2019ve opened a position in an Orca Whirlpool, you may need to adjust the amount of liquidity you\'ve provided to align with market conditions or your strategy. Whether you want to add more liquidity to capture additional fees or withdraw liquidity to reduce exposure or realize profits, the Whirlpools SDK provides functions for both.","source":"@site/docs/03-Whirlpools SDKs/01-Whirlpools/04-Position Management/03-Adjust Liquidity.mdx","sourceDirName":"03-Whirlpools SDKs/01-Whirlpools/04-Position Management","slug":"/Whirlpools SDKs/Whirlpools/Position Management/Adjust Liquidity","permalink":"/Whirlpools SDKs/Whirlpools/Position Management/Adjust Liquidity","draft":false,"unlisted":false,"editUrl":"https://github.com/orca-so/whirlpools/tree/main/docs/whirlpool/docs/03-Whirlpools SDKs/01-Whirlpools/04-Position Management/03-Adjust Liquidity.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"Adjust Liquidity"},"sidebar":"sidebar","previous":{"title":"Fetch Positions","permalink":"/Whirlpools SDKs/Whirlpools/Position Management/Fetch Positions"},"next":{"title":"Harvest","permalink":"/Whirlpools SDKs/Whirlpools/Position Management/Harvest"}}');var o=n(1085),r=n(1184),s=n(95),a=n(4435);const l={sidebar_label:"Adjust Liquidity"},u="Adjusting Liquidity in Your Positions",d={},c=[{value:"1. Overview of Adjusting Liquidity",id:"1-overview-of-adjusting-liquidity",level:2},{value:"2. Getting Started Guide",id:"2-getting-started-guide",level:2},{value:"Adjusting Liquidity in a Position",id:"adjusting-liquidity-in-a-position",level:3},{value:"3. Usage example",id:"3-usage-example",level:2},{value:"4. Next steps",id:"4-next-steps",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"adjusting-liquidity-in-your-positions",children:"Adjusting Liquidity in Your Positions"})}),"\n",(0,o.jsx)(t.p,{children:"Once you\u2019ve opened a position in an Orca Whirlpool, you may need to adjust the amount of liquidity you've provided to align with market conditions or your strategy. Whether you want to add more liquidity to capture additional fees or withdraw liquidity to reduce exposure or realize profits, the Whirlpools SDK provides functions for both."}),"\n",(0,o.jsx)(t.p,{children:"This guide explains how to use the SDK functions to increase and decrease the liquidity in your position."}),"\n",(0,o.jsx)(t.h2,{id:"1-overview-of-adjusting-liquidity",children:"1. Overview of Adjusting Liquidity"}),"\n",(0,o.jsx)(t.p,{children:"The SDK functions for increasing or decreasing liquidity work similarly, enabling you to modify the liquidity of an existing position. You can specify the liquidity directly or provide amounts of token A or token B to increase or decrease liquidity."}),"\n",(0,o.jsx)(t.p,{children:"With these functions, you can:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Increase liquidity to potentially earn more fees as trading volume grows."}),"\n",(0,o.jsx)(t.li,{children:"Decrease liquidity to reduce exposure or withdraw profits."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"2-getting-started-guide",children:"2. Getting Started Guide"}),"\n",(0,o.jsx)(t.h3,{id:"adjusting-liquidity-in-a-position",children:"Adjusting Liquidity in a Position"}),"\n",(0,o.jsx)(t.p,{children:"Adjusting liquidity in an existing position can be done as follows:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"RPC Client"}),": Use a Solana RPC client to interact with the blockchain."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Position Mint"}),": Provide the mint address of the NFT representing your position. This NFT serves as proof of ownership of the position you want to adjust."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Liquidity Parameters"}),": Choose how you want to adjust liquidity. You only need to provide one of these parameters, and the function will compute the others in the returned quote based on the current price of the pool and the price range of the position:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"liquidity"}),": Specify the liquidity value to add or remove."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"tokenA"}),": Specify the amount of token A to add or withdraw."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"tokenB"}),": Specify the amount of token B to add or withdraw."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Slippage tolerance"}),": Set the maximum slippage tolerance (optional, defaults to 1%). Slippage refers to the difference between the expected token amounts added or removed when adjusting liquidity and the actual amounts that are ultimately deposited or withdrawn. A lower slippage tolerance reduces the risk of depositing or withdrawing more or fewer tokens than intended, but it may lead to failed transactions if the market moves too quickly."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Funder"}),": This can be your wallet, which will fund the pool initialization. If a funder is not specified, the default wallet will be used. You can configure the default wallet through the SDK."]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Create Instructions"}),": Use the appropriate function to generate the necessary instructions."]}),"\n",(0,o.jsxs)(s.A,{groupId:"programming-languages",children:[(0,o.jsx)(a.A,{value:"ts",label:"Typescript",default:!0,children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"import { decreaseLiquidityInstructions, increaseLiquidityInstructions, setWhirlpoolsConfig } from '@orca-so/whirlpools';\nimport { createSolanaRpc, devnet, address } from '@solana/kit';\nimport { loadWallet } from './utils';\n\nawait setWhirlpoolsConfig('solanaDevnet');\nconst devnetRpc = createSolanaRpc(devnet('https://api.devnet.solana.com'));\nconst wallet = await loadWallet();\nconst positionMint = address(\"HqoV7Qv27REUtmd9UKSJGGmCRNx3531t33bDG1BUfo9K\");\nconst param = { tokenA: 10n };\nconst { quote: increaseQuote, instructions: increaseInstructions } = await increaseLiquidityInstructions(\n    devnetRpc,\n    positionMint,\n    param,\n    100,\n    wallet\n);\n\nconst { quote: decreaseQuote, instructions: decreaseInstructions } = await decreaseLiquidityInstructions(\n    devnetRpc,\n    positionMint,\n    param,\n    100,\n    wallet\n);\n\nconsole.log(`Increase quote token max B: ${increaseQuote.tokenEstB}`);\nconsole.log(`Decrease quote token max B: ${decreaseQuote.tokenEstB}`);\n"})})}),(0,o.jsx)(a.A,{value:"rust",label:"Rust",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-rust",children:'use orca_whirlpools::{\n    decrease_liquidity_instructions, increase_liquidity_instructions, set_whirlpools_config_address, DecreaseLiquidityParam, IncreaseLiquidityParam, WhirlpoolsConfigInput\n};\nuse solana_client::nonblocking::rpc_client::RpcClient;\nuse solana_sdk::pubkey::Pubkey;\nuse std::str::FromStr;\nuse crate::utils::load_wallet;\n\n#[tokio::main]\nasync fn main() {\n    set_whirlpools_config_address(WhirlpoolsConfigInput::SolanaDevnet).unwrap();\n    let rpc = RpcClient::new("https://api.devnet.solana.com".to_string());\n    let wallet = load_wallet();\n    let position_mint_address = Pubkey::from_str("HqoV7Qv27REUtmd9UKSJGGmCRNx3531t33bDG1BUfo9K").unwrap();\n    let increase_param = IncreaseLiquidityParam::TokenA(1_000_000);\n    let decrease_param = DecreaseLiquidityParam::TokenA(1_000_000);\n\n    let increase_result = increase_liquidity_instructions(\n        &rpc,\n        position_mint_address,\n        increase_param,\n        Some(100),\n        Some(wallet.pubkey()),\n    )\n    .await.unwrap();\n\n    let decrease_result = decrease_liquidity_instructions(\n        &rpc,\n        position_mint_address,\n        decrease_param,\n        Some(100),\n        Some(wallet.pubkey()),\n    )\n    .await.unwrap();\n\n    println!("Liquidity Increase Quote: {:?}", increase_result.quote);\n    println!("Liquidity Decrease Quote: {:?}", decrease_result.quote);\n    println!("Number of Instructions: {}", increase_result.instructions.len());\n}\n'})})})]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Submit Transaction"}),": Include the generated instructions in a Solana transaction and send it to the network using the Solana SDK."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"3-usage-example",children:"3. Usage example"}),"\n",(0,o.jsx)(t.p,{children:"You are creating a bot to manage investors' funds and want to optimize returns. Such a bot could rebalance liquidity based on market signals to maintain a specific target price range or to optimize fee collection during periods of high volatility."}),"\n",(0,o.jsx)(t.h2,{id:"4-next-steps",children:"4. Next steps"}),"\n",(0,o.jsx)(t.p,{children:"After adjusting liquidity, you can:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/Whirlpools%20SDKs/Whirlpools/Position%20Management/Fetch%20Positions",children:"Monitor Performance"}),": Track your adjusted position to evaluate its performance and earned fees."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"/Whirlpools%20SDKs/Whirlpools/Position%20Management/Harvest",children:"Harvest Rewards"}),": Collect any earned fees and rewards without closing your position."]}),"\n",(0,o.jsx)(t.li,{children:"Make Further Adjustments: Depending on market conditions, continue to adjust liquidity as needed to maximize returns or manage risk."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"By using the SDK to adjust liquidity, you gain flexibility in managing your positions and optimizing your liquidity provision strategy."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);